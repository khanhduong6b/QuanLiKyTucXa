// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLiKyTucXa.Models;

#nullable disable

namespace QuanLiKyTucXa.Migrations
{
    [DbContext(typeof(QlktxContext))]
    [Migration("20231129163304_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLiKyTucXa.Models.AdminAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TaiKhoan")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("TaiKhoan")
                        .IsUnique();

                    b.ToTable("AdminAccounts");
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.GiuongNgu", b =>
                {
                    b.Property<int>("SoGiuong")
                        .HasColumnType("int")
                        .HasColumnName("soGiuong");

                    b.Property<int>("Mp")
                        .HasColumnType("int")
                        .HasColumnName("mp");

                    b.Property<string>("Mssv")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("mssv")
                        .IsFixedLength();

                    b.HasKey("SoGiuong");

                    b.HasIndex("Mssv");

                    b.ToTable("GiuongNgu", (string)null);
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.HoaDon", b =>
                {
                    b.Property<int>("Mp")
                        .HasColumnType("int")
                        .HasColumnName("mp");

                    b.Property<int>("ChiSoCuoi")
                        .HasColumnType("int")
                        .HasColumnName("chiSoCuoi");

                    b.Property<int>("ChiSoDau")
                        .HasColumnType("int")
                        .HasColumnName("chiSoDau");

                    b.Property<int>("GiaDien")
                        .HasColumnType("int")
                        .HasColumnName("giaDien");

                    b.Property<int>("GiaNuoc")
                        .HasColumnType("int")
                        .HasColumnName("giaNuoc");

                    b.Property<int>("Thang")
                        .HasColumnType("int")
                        .HasColumnName("thang");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trangThai");

                    b.HasKey("Mp");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.HoaDonPhong", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("maHoaDon")
                        .IsFixedLength();

                    b.Property<string>("Mssv")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("mssv")
                        .IsFixedLength();

                    b.Property<string>("Quy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quy");

                    b.Property<double>("SoTien")
                        .HasColumnType("float")
                        .HasColumnName("soTien");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trangThai");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("Mssv");

                    b.ToTable("HoaDonPhong", (string)null);
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.Khu", b =>
                {
                    b.Property<string>("KhuVuc")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("khuVuc")
                        .IsFixedLength();

                    b.Property<bool>("Loai")
                        .HasColumnType("bit")
                        .HasColumnName("loai");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("viTri");

                    b.HasKey("KhuVuc");

                    b.ToTable("Khu", (string)null);
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.NhatKy", b =>
                {
                    b.Property<string>("Mssv")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("mssv")
                        .IsFixedLength();

                    b.Property<string>("NamHoc")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .HasColumnName("namHoc")
                        .IsFixedLength();

                    b.Property<DateTime?>("NgayThu")
                        .HasColumnType("date")
                        .HasColumnName("ngayThu");

                    b.Property<string>("SoBienLai")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("soBienLai")
                        .IsFixedLength();

                    b.Property<double?>("SoTien")
                        .HasColumnType("float")
                        .HasColumnName("soTien");

                    b.HasKey("Mssv");

                    b.ToTable("NhatKy", (string)null);
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.PhieuDangKy", b =>
                {
                    b.Property<string>("MaHoSo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("maHoSo")
                        .IsFixedLength();

                    b.Property<string>("Mssv")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("mssv")
                        .IsFixedLength();

                    b.Property<string>("TinhTrang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tinhTrang");

                    b.HasKey("MaHoSo");

                    b.HasIndex("Mssv");

                    b.ToTable("PhieuDangKy", (string)null);
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.Phong", b =>
                {
                    b.Property<int>("Mp")
                        .HasColumnType("int")
                        .HasColumnName("mp");

                    b.Property<string>("KhuVuc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("khuVuc")
                        .IsFixedLength();

                    b.Property<int>("SoLuongSvhienTai")
                        .HasColumnType("int")
                        .HasColumnName("soLuongSVHienTai");

                    b.Property<int>("SoLuongSvtoiDa")
                        .HasColumnType("int")
                        .HasColumnName("soLuongSVToiDa");

                    b.HasKey("Mp");

                    b.HasIndex("KhuVuc");

                    b.ToTable("Phong", (string)null);
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.SinhVien", b =>
                {
                    b.Property<string>("Mssv")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("mssv")
                        .IsFixedLength();

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit")
                        .HasColumnName("gioiTinh");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("hoTen");

                    b.Property<string>("Khoa")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .HasColumnName("khoa")
                        .IsFixedLength();

                    b.Property<string>("Lop")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("lop")
                        .IsFixedLength();

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Mp")
                        .HasColumnType("int")
                        .HasColumnName("mp");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("date")
                        .HasColumnName("ngaySinh");

                    b.Property<string>("Sdt")
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .HasColumnName("sdt")
                        .IsFixedLength();

                    b.Property<int?>("SoGiuong")
                        .HasColumnType("int")
                        .HasColumnName("soGiuong");

                    b.HasKey("Mssv");

                    b.HasIndex("Mp");

                    b.ToTable("SinhVien", (string)null);
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.GiuongNgu", b =>
                {
                    b.HasOne("QuanLiKyTucXa.Models.SinhVien", "MssvNavigation")
                        .WithMany("GiuongNgus")
                        .HasForeignKey("Mssv")
                        .HasConstraintName("FK_GiuongNgu_SinhVien");

                    b.Navigation("MssvNavigation");
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.HoaDon", b =>
                {
                    b.HasOne("QuanLiKyTucXa.Models.Phong", "MpNavigation")
                        .WithOne("HoaDon")
                        .HasForeignKey("QuanLiKyTucXa.Models.HoaDon", "Mp")
                        .IsRequired()
                        .HasConstraintName("FK_HoaDon_Phong");

                    b.Navigation("MpNavigation");
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.HoaDonPhong", b =>
                {
                    b.HasOne("QuanLiKyTucXa.Models.SinhVien", "MssvNavigation")
                        .WithMany("HoaDonPhongs")
                        .HasForeignKey("Mssv")
                        .IsRequired()
                        .HasConstraintName("FK_HoaDonPhong_SinhVien");

                    b.Navigation("MssvNavigation");
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.NhatKy", b =>
                {
                    b.HasOne("QuanLiKyTucXa.Models.SinhVien", "MssvNavigation")
                        .WithOne("NhatKy")
                        .HasForeignKey("QuanLiKyTucXa.Models.NhatKy", "Mssv")
                        .IsRequired()
                        .HasConstraintName("FK_NhatKy_SinhVien");

                    b.Navigation("MssvNavigation");
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.PhieuDangKy", b =>
                {
                    b.HasOne("QuanLiKyTucXa.Models.SinhVien", "MssvNavigation")
                        .WithMany("PhieuDangKies")
                        .HasForeignKey("Mssv")
                        .IsRequired()
                        .HasConstraintName("FK_PhieuDangKy_SinhVien");

                    b.Navigation("MssvNavigation");
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.Phong", b =>
                {
                    b.HasOne("QuanLiKyTucXa.Models.Khu", "KhuVucNavigation")
                        .WithMany("Phongs")
                        .HasForeignKey("KhuVuc")
                        .IsRequired()
                        .HasConstraintName("FK_Phong_Khu");

                    b.Navigation("KhuVucNavigation");
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.SinhVien", b =>
                {
                    b.HasOne("QuanLiKyTucXa.Models.Phong", "MpNavigation")
                        .WithMany("SinhViens")
                        .HasForeignKey("Mp")
                        .HasConstraintName("FK_SinhVien_Phong");

                    b.Navigation("MpNavigation");
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.Khu", b =>
                {
                    b.Navigation("Phongs");
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.Phong", b =>
                {
                    b.Navigation("HoaDon");

                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("QuanLiKyTucXa.Models.SinhVien", b =>
                {
                    b.Navigation("GiuongNgus");

                    b.Navigation("HoaDonPhongs");

                    b.Navigation("NhatKy");

                    b.Navigation("PhieuDangKies");
                });
#pragma warning restore 612, 618
        }
    }
}
